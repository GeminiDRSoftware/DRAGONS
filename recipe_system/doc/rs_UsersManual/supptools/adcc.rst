
adcc
----

The application that has been historically known as the ``adcc`` (Automated
Data Communication Center), is an HTTP proxy server. The webservice provided
by the ``adcc`` allows both the Recipe System and primitive functions to post
data produced during data processing. These data comprise image quality and
observing condition metrics, passed to the web server in the form of messages
encapsulating Quality Assessment (QA) metrics data. The metrics themselves are
produced by three specific primitive functions, ``measureIQ``, ``measuerBG``,
and ``measureCC``, which respectively measure image quality, background level,
and cloud cover (measured atmospheric extinction). These QA metrics are the
priniciple product generated by the Quality Assessment Pipeline (QAP), that
provides near real time assessments of observing conditions.

Neither the Recipe System nor the primitives require the ``adcc`` to be
running, but if an ``adcc`` instance is alive, then QA metrics will be
reported to the service by the QA measurement primitives if they are called.
The ``adcc`` provides an interactive web interface and renders metric
"events" in real time. Metrics events are also directly reported to the
:ref:`fitsstore` and stored in the fitsstore metrics database when the
``reduce`` option, ``--upload_metrics``, is specified.

The ``adcc`` is started with the command of the same name, and one may request
the help (or the manpage), in order to see the possible controllers supplied::

  $ adcc --help

  usage: adcc [-h] [-d] [-v] [--startup-report ADCCSRN] [--http-port HTTPPORT]

  Automated Data Communication Center (ADCC), v2.0 (beta)

  optional arguments:
    -h, --help            Show this help message and exit
    -d, --dark            Use the adcc faceplate 'dark' theme.
    -v, --verbose         Increase HTTP client messaging on GET requests.
    --startup-report ADCCSRN
                          File name for adcc startup report.
    --http-port HTTPPORT  Response port for the web interface.
                          Default port is 8777.

The application provides a HTTP server that listens on either a user-provided
port number (via ``--http-port``), or the default port of 8777. This webserver
provides an interactive, graphical interface by which users can monitor incoming
metrics that may be reported by recipe system pipelines (recipes), specifically,
the Quality Assurance Pipeline (QAP). It is worth repeating that the near
real-time QAP produces image quality and weather related metrics that are passed
to the adcc as message events. Users wishing to use the adcc to monitor QA
metrics need to simply open a web browser on the service's URL.

.. figure:: /images/adcc_dark_metrics.png

   Snapshot of the Nighttime Metrics GUI, using the "dark" theme and displaying
   the metrics retrieved from fitsstore for operational day 20170209.

E.g., In a terminal window, start the adcc with default values::

    $ adcc

Or in a terminal window, start the adcc and request the "dark" page theme and
verbosity::

    $ adcc -d -v

The ``-v`` (verbose) option displays server messages to stdout. These messages
will comprise POST and GET requests made on the server and selected server
responses. These messages are informational only, though may be of some
interest to users.

Once an adcc is up and running, open a browser window on

    http://localhost:8777/qap/nighttime_metrics.html

This will render any metrics received from the server for the current
operational day. When metrics are produced and sent to the adcc, the display
will automatically update with the latest metric event. If users are processing
datasets taken on a day prior to the current operational day, the URL to
monitor metrics produced for that day is

     http://localhost:8777/qap/nighttime_metrics.html?date=YYYYMMDD

When the adcc is started, certain information is written to a special file in
a ``.adcc`` directory that records the process id (pid) of the adcc instance and
port number on which the web server is listening.

.. note::
   Currently, only one ``adcc`` instance is permitted to run. Any and all
   instances of ``reduce`` will report metrics to the currently running instance
   of the ``adcc``.