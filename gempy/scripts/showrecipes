#!/usr/bin/env python
# -*- coding: utf8 -*-

from gempy.utils import showrecipes

__author__ = 'Ivan Sharankov'


def main():
    args = showprims_argparser()
    if args.all:
        recipes_found = showrecipes.showrecipes(args.inputfile,
                                                args.adpkg, args.drpkg)
        print(recipes_found)
    else:
        print(args)
        primitives_found = showrecipes.showprims(
            args.inputfile, args.mode, args.recipe, args.adpkg, args.drpkg)
        print(primitives_found)


def showprims_argparser():
    from argparse import ArgumentParser
    from argparse import RawDescriptionHelpFormatter

    parser = ArgumentParser(description="desc", prog='showprims',
                            formatter_class=RawDescriptionHelpFormatter)

    parser.add_argument('inputfile', type=str,
                        help="The fits file needed to extract the tags. This "
                             "file must be opened by astrodata as an object")

    parser.add_argument("-m", "--mode", dest="mode", default='sq',
                        help="determines if the mode of the recipe "
                             "is either 'qa' or 'sq'.")

    parser.add_argument("-r", "--recipe", dest="recipe", default='_default',
                        help="Determines the recipe that the user wants "
                             "to see the primitives for. If no recipe is "
                             " provided, the default is used.")

    parser.add_argument("--all", default=False, action='store_true',
                        help='Show the name of all the valid recipes.')

    parser.add_argument('--adpkg', nargs=1,
                        dest='adpkg', action='store', required=False,
                        help='Name of the astrodata instrument package to use'
                             'if not gemini_instruments')

    parser.add_argument('--drpkg', nargs=1,
                        dest='drpkg', action='store', required=False,
                        help='Name of the DRAGONS instrument package to use'
                             'if not geminidr')

    parser.add_argument("--debug", default=False, action='store_true',
                        help='Print debugging statements')

    args = parser.parse_args()

    if args.debug:
        print(args)

    if args.adpkg is not None:
        args.adpkg = args.adpkg[0]
    if args.drpkg is not None:
        args.drpkg = args.drpkg[0]

    return args


if __name__ == "__main__":
    main()
