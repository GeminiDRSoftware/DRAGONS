[tox]
envlist =
    py{37,38,39,310,311}-{noop,unit,gmosls,integ,reg,slow}
    codecov
    check
    docs-{astrodata}
requires = tox-conda
isolated_build = true

[testenv]
args_are_paths = false
whitelist_externals =
    which
passenv =
    DRAGONS_TEST
    DRAGONS_TEST_OUTPUTS
    GITHUB_WORKFLOW
    HOME
    LANG
    LC_ALL
    MPLBACKEND
    TMPDIR
conda_deps =
    asdf>=2.7,!=2.10.0
    astropy>=4.3,!=5.3.0
    astroquery>=0.4
    astroscrappy>=1.1
    bokeh>=2.3,<3.0
    bottleneck>=1.2
    coverage
    cycler>=0.10
    cython>=0.29
    docutils>=0.15
    future>=0.17
    gwcs>=0.15
    holoviews>=1.14
    jinja2>=3.0
    jsonschema>=3.0
    matplotlib>=3.1
    numpy>=1.17
    objgraph>=3.5
    psutil>=5.6  # only used by adcc?
    pyerfa>=1.7
    pytest>=5.2
    python-dateutil>=2.5.3
    requests>=2.22
    scipy>=1.3
    sextractor>=2.8.6
    specutils>=1.1
    sqlalchemy>=1.3,<2.0.0a0  # new v2 API breaks calmgr (which is a wheel)
conda_channels =
    http://astroconda.gemini.edu/public
    conda-forge
conda_create_args =
    --override-channels
    --experimental=lock
conda_install_args =
    --override-channels
    --experimental=lock
extras =
    test
    docs: docs
deps =
    .jenkins/local_calibration_manager/GeminiObsDB-1.0.22-py3-none-any.whl
    .jenkins/local_calibration_manager/GeminiCalMgr-1.1.12-py3-none-any.whl
    git+https://github.com/GeminiDRSoftware/pytest_dragons.git@v1.0.4#egg=pytest_dragons
changedir =
    .tmp
commands =
    python --version
    which python
    which pip
    which pytest
    pip install git+https://github.com/GeminiDRSoftware/AstroFaker#egg=AstroFaker
    conda list
    noop: python -c "pass"  # just install deps & ensure python runs
    unit: python -m coverage run --rcfile={toxinidir}/.coveragerc -m pytest -v --dragons-remote-data --durations=20 -m "not integration_test and not gmosls and not regression and not slow" {posargs:astrodata geminidr gemini_instruments gempy recipe_system}
    integ: python -m coverage run --rcfile={toxinidir}/.coveragerc -m pytest -v --dragons-remote-data --durations=20 -m "integration_test and not slow" {posargs:astrodata geminidr gemini_instruments gempy recipe_system}
    gmosls: python -m coverage run --rcfile={toxinidir}/.coveragerc -m pytest -v --dragons-remote-data --durations=20 -m "gmosls and not slow" {posargs:astrodata geminidr gemini_instruments gempy recipe_system}
    reg: python -m coverage run --rcfile={toxinidir}/.coveragerc -m pytest -v --dragons-remote-data --durations=20 -m "regression and not slow" {posargs:astrodata geminidr gemini_instruments gempy recipe_system}
    slow: python -m coverage run --rcfile={toxinidir}/.coveragerc -m pytest -v --dragons-remote-data --durations=20 -m slow {posargs:astrodata geminidr gemini_instruments gempy recipe_system}
    docs: sphinx-build {posargs} . _build/html

[testenv:covreport]
skip_install = true
conda_deps =
deps = coverage
commands = coverage {posargs:report}

[testenv:codecov]
skip_install = true
passenv = CI JENKINS_* CODECOV_TOKEN
conda_deps =
deps = codecov
commands =
    codecov {posargs}

[testenv:check]
skip_install = true
conda_deps =
deps =
    pydocstyle
    pylint
whitelist_externals =
    bash
    mkdir
commands =
    mkdir -p reports
    bash -c \'pylint --exit-zero --rcfile=gempy/support_files/pylintrc \
        astrodata gemini_instruments gempy geminidr recipe_system \
        > reports/pylint.log\'
    bash -c \'pydocstyle --add-ignore D400,D401,D205,D105,D105 \
        --match="(?!test_|conf).*\.py" \
        astrodata gemini_instruments gempy geminidr recipe_system \
        > reports/pydocstyle.log || exit 0\'
