[tox]
envlist =
    py{36,37,38,39}-{unit,gmosls,integ,reg,slow}
    codecov
    check
    docs-{astrodata}
requires = tox-conda
isolated_build = true

[testenv]
args_are_paths = false
whitelist_externals =
    which
passenv =
    DRAGONS_TEST
    DRAGONS_TEST_OUTPUTS
    GITHUB_WORKFLOW
    HOME
    LANG
    LC_ALL
    MPLBACKEND
    TMPDIR
conda_deps =
    astropy>=4.2
    astroquery
    cython
    future
    gwcs
    Jinja2
    matplotlib
    numpy
    pytest
    scipy
    sextractor
    specutils
    sqlalchemy
conda_channels =
    http://ssb.stsci.edu/astroconda
extras =
    test
    docs: docs
deps =
    coverage
    .jenkins/local_calibration_manager/GeminiObsDB-1.0.22-py3-none-any.whl
    .jenkins/local_calibration_manager/GeminiCalMgr-1.1.12-py3-none-any.whl
    git+https://github.com/GeminiDRSoftware/pytest_dragons.git@v1.0.3#egg=pytest_dragons
changedir =
    .tmp
commands =
    python --version
    which python
    which pip
    which pytest
    pip freeze -l
    pip install git+https://github.com/astropy/astroscrappy.git#egg=astroscrappy
    pip install git+https://github.com/GeminiDRSoftware/AstroFaker#egg=AstroFaker
    unit: python -m coverage run --rcfile={toxinidir}/.coveragerc -m pytest -v --dragons-remote-data --durations=20 -m "not integration_test and not gmosls and not regression and not slow" {posargs:astrodata geminidr gemini_instruments gempy recipe_system}
    integ: python -m coverage run --rcfile={toxinidir}/.coveragerc -m pytest -v --dragons-remote-data --durations=20 -m "integration_test and not slow" {posargs:astrodata geminidr gemini_instruments gempy recipe_system}
    gmosls: python -m coverage run --rcfile={toxinidir}/.coveragerc -m pytest -v --dragons-remote-data --durations=20 -m "gmosls and not slow" {posargs:astrodata geminidr gemini_instruments gempy recipe_system}
    reg: python -m coverage run --rcfile={toxinidir}/.coveragerc -m pytest -v --dragons-remote-data --durations=20 -m "regression and not slow" {posargs:astrodata geminidr gemini_instruments gempy recipe_system}
    slow: python -m coverage run --rcfile={toxinidir}/.coveragerc -m pytest -v --dragons-remote-data --durations=20 -m slow {posargs:astrodata geminidr gemini_instruments gempy recipe_system}
    docs: sphinx-build {posargs} . _build/html

[testenv:covreport]
skip_install = true
conda_deps =
deps = coverage
commands = coverage {posargs:report}

[testenv:codecov]
skip_install = true
passenv = CI JENKINS_* CODECOV_TOKEN
conda_deps =
deps = codecov
commands =
    codecov {posargs}

[testenv:check]
skip_install = true
conda_deps =
deps =
    pydocstyle
    pylint
whitelist_externals =
    bash
    mkdir
commands =
    mkdir -p reports
    bash -c \'pylint --exit-zero --rcfile=gempy/support_files/pylintrc \
        astrodata gemini_instruments gempy geminidr recipe_system \
        > reports/pylint.log\'
    bash -c \'pydocstyle --add-ignore D400,D401,D205,D105,D105 \
        --match="(?!test_|conf).*\.py" \
        astrodata gemini_instruments gempy geminidr recipe_system \
        > reports/pydocstyle.log || exit 0\'
